>.<

Title: Lyft Driver Wages
Link: https://platform.stratascratch.com/coding/10003-lyft-driver-wages?code_type=2
Level: Easy

Find all Lyft drivers who earn either equal to or less than 30k USD or equal to or more than 70k USD.
Output all details related to retrieved records.

Data lyft_drivers:
end_date: datetime
index: bigint
start_date: datetime
yearly_salary: bigint

>.<

Solution:

# Import your libraries
import pandas as pd

# Start writing code

driver = pd.DataFrame(lyft_drivers)

driver_wages = driver[(driver['yearly_salary']<=30000) | (driver['yearly_salary']>=70000)]
    
Output:

index  |  start_date        |  end_date            |  yearly_salary
10      2018-04-25 00:00:00    2018-04-28 00:00:00    79536
14      2015-11-30 00:00:00    2018-04-24 00:00:00    89270
15      2018-05-29 00:00:00	                          87766
17      2017-05-07 00:00:00	                          88828
18      2018-11-09 00:00:00	                          82993
20      2015-04-23 00:00:00    2017-01-30 00:00:00    71683
22      2016-12-25 00:00:00	                          85329
23      2015-05-11 00:00:00    2018-03-29 00:00:00    72366
24      2018-03-24 00:00:00    2019-01-04 00:00:00    84812
26      2016-05-12 00:00:00    2018-10-02 00:00:00    88599
27      2017-03-26 00:00:00	                          85792
29      2016-03-30 00:00:00    2018-08-10 00:00:00    29866
31      2016-11-01 00:00:00	                          82028
35      2018-10-19 00:00:00    2018-11-23 00:00:00    90920
41      2017-06-27 00:00:00    2017-12-29 00:00:00    90137
47      2018-06-12 00:00:00	                          76924
49      2015-10-06 00:00:00    2016-11-27 00:00:00    27194
55      2016-12-02 00:00:00	                          29542
62      2017-08-24 00:00:00    2019-01-27 00:00:00    74691
63      2018-07-02 00:00:00	                          75327
64      2015-08-03 00:00:00                           26376
65      2015-04-25 00:00:00    2018-01-15 00:00:00    29007
68      2018-07-22 00:00:00                           88997
71      2017-08-03 00:00:00	                          85436
72      2016-01-09 00:00:00	                          72586
73      2018-02-14 00:00:00	                          85246
75      2018-11-04 00:00:00	                          91064
76      2015-02-08 00:00:00    2015-12-15 00:00:00    83653
79      2016-10-18 00:00:00	                          77622
80      2017-12-13 00:00:00    2018-11-29 00:00:00    71852
86      2018-03-30 00:00:00    2019-03-29 00:00:00    70230
89      2015-10-18 00:00:00    2018-02-03 00:00:00    80809
90      2017-04-08 00:00:00	                          91980
91      2015-09-21 00:00:00    2018-05-24 00:00:00    75975
92      2018-12-07 00:00:00	                          83824
94      2018-06-09 00:00:00	                          89381
